name: Test and Deploy Django App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.12 ]

    steps:
      - uses: actions/checkout@v4
      - uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        run: |
          python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Ansible
      run: pip install ansible

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Verify SSH connection
      run: ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} echo "SSH connection successful"

    - name: Run Ansible playbook
      run: |
        cd ansible
        ansible-playbook -i inventory/production playbook.yml \
          --extra-vars "git_branch=${{ steps.extract_branch.outputs.branch }} ansible_host=${{ secrets.SERVER_IP }}" \
          --extra-vars "database_name=${{ secrets.DATABASE_NAME }}" \
          --extra-vars "database_user=${{ secrets.DATABASE_USER }}" \
          --extra-vars "database_host=${{ secrets.DATABASE_HOST }}" \
          --extra-vars "database_password=${{ secrets.DATABASE_PASSWORD }}" \
          --extra-vars "django_secret_key=${{ secrets.DJANGO_SECRET_KEY }}" \
          --extra-vars "s3_access_key_id=${{ secrets.S3_ACCESS_KEY_ID }}" \
          --extra-vars "s3_secret_access_key=${{ secrets.S3_SECRET_ACCESS_KEY }}" \
          --extra-vars "s3_bucket_name=${{ secrets.S3_BUCKET_NAME }}" \
          --extra-vars "s3_endpoint_url=${{ secrets.S3_ENDPOINT_URL }}" \
          --extra-vars "s3_custom_domain=${{ secrets.S3_CUSTOM_DOMAIN }}" \
          --extra-vars "ai_token=${{ secrets.AI_TOKEN }}" \
          --user ${{ secrets.SERVER_USER }} \
          --private-key ${{ secrets.SSH_PRIVATE_KEY_PATH }} \

      env:
        ANSIBLE_HOST_KEY_CHECKING: False
        ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
